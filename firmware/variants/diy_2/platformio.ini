[env:meshtastic-diy-v1-1_07violet]
extends = esp32_base
board = esp32doit-devkit-v1
board_level = extra
build_flags =
  ${esp32_base.build_flags}
  -D DIY_V1
  -D EBYTE_E22
  -D OLED_RU
  -I variants/diy/v1_violet

; Meshtastic DIY v1.1 new schematic based on ESP32-WROOM-32 & SX1262/SX1268 modules

[env:diy-nano-c3]
extends = esp32c3_base
board = esp32-c3-devkitm-1
board_level = extra
build_flags =
  ${esp32_base.build_flags}
  -D PRIVATE_HW
  -D ARDUINO_USB_MODE=1
  -D ARDUINO_USB_CDC_ON_BOOT=0
  -I variants/diy/diy_nano_c3
monitor_speed = 115200
upload_protocol = esptool


[env:diy-heltec-ct62-c3-tiny-1_02]
extends = esp32c3_base
board = esp32-c3-devkitm-1
board_level = extra
build_flags =
  ${esp32_base.build_flags}
  -D PRIVATE_HW
  -D ARDUINO_USB_MODE=1
  ;-D ARDUINO_USB_CDC_ON_BOOT=0
  -D ARDUINO_USB_CDC_ON_BOOT=1
  -I variants/diy/diy-heltec-ct62-tiny-1.02
monitor_speed = 115200
upload_protocol = esptool
; Tested -D ARDUINO_USB_CDC_ON_BOOT=1 works with 2.0.15 (but has breaking changes and need to be supported in platformio first)
;platform = https://github.com/platformio/platform-espressif32.git
;platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.15
platform = platformio/espressif32@6.7.0
;upload_port = /dev/ttyACM2
;upload_speed = 921600


; Promicro + E22(0)-xxxMM modules board variant - DIY - without TCXO
[env:promicro_diy_mm]
extends = nrf52840_base
board = promicro-nrf52840
board_level = extra
build_flags = ${nrf52840_base.build_flags} -Ivariants/diy/promicro_diy_mm -Dpromicro_diy
  -L "${platformio.libdeps_dir}/${this.__env__}/bsec2/src/cortex-m4/fpv4-sp-d16-hard"
  -D OLED_RU
build_src_filter = ${nrf52_base.build_src_filter} +<../variants/diy/promicro_diy_mm>
lib_deps = 
  ${nrf52840_base.lib_deps}
debug_tool = jlink
; If not set we will default to uploading over serial (first it forces bootloader entry by talking 1200bps to cdcacm)
;upload_protocol = jlink

; Promicro + E22(0)-xxxM modules board variant - DIY - with TCXO
[env:promicro_diy_m]
extends = nrf52840_base
board = promicro-nrf52840
board_level = extra
build_flags = ${nrf52840_base.build_flags} -Ivariants/diy/promicro_diy_m -Dpromicro_diy
  -L "${platformio.libdeps_dir}/${this.__env__}/bsec2/src/cortex-m4/fpv4-sp-d16-hard"
  -D OLED_RU
build_src_filter = ${nrf52_base.build_src_filter} +<../variants/diy/promicro_diy_m>
lib_deps = 
  ${nrf52840_base.lib_deps}
debug_tool = jlink
; If not set we will default to uploading over serial (first it forces bootloader entry by talking 1200bps to cdcacm)
;upload_protocol = jlink


[env:meshtastic-diy-v2-RZ6AT-ru]
extends = esp32_base
board = esp32doit-devkit-v1
board_level = extra
build_flags =
  ${esp32_base.build_flags}
  -D DIY_V1
  -D EBYTE_E22
  -D OLED_RU
  -I variants/diy/v2_RZ6AT

; Promicro + E22(0)-xxxM modules board variant - DIY - with TCXO
[env:e73_slim]
extends = nrf52840_base
board = promicro-nrf52840
board_level = extra
build_flags = ${nrf52840_base.build_flags} -Ivariants/diy/e73_slim -De73_slim
  -L "${platformio.libdeps_dir}/${this.__env__}/bsec2/src/cortex-m4/fpv4-sp-d16-hard"
  -D OLED_RU
build_src_filter = ${nrf52_base.build_src_filter} +<../variants/diy/e73_slim>
lib_deps = 
  ${nrf52840_base.lib_deps}
debug_tool = jlink
; If not set we will default to uploading over serial (first it forces bootloader entry by talking 1200bps to cdcacm)
;upload_protocol = jlink